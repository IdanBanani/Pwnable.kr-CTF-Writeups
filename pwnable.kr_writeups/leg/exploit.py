#!/usr/bin/env python

from pwn import *

# The function return values are put into r3 (then moved to r0 and used in main to define the full key in r2 before comparison)
# pc is the program counter (equivalent to instruction pointer)
# ls is the link register (equivalent to return address)
key1 = 0x00008cdc # Address of the "mov r3, pc" instruction from gdb output
key1 += 8 # ARM pc pointer is 8 bytes ahead in standard mode

key2 = 0x00008d04 # Address of the "mov r3, pc" instruction from gdb output
key2 += 4 # ARM pc pointer is 4 bytes ahead in Thumb mode (".code 16")
key2 += 4 # Corresponds to "adds r3, #4" adding 4 to the key

key3 = 0x00008d80 # Return address in main after key3 is exectued

key = key1 + key2 + key3

server = ssh('leg', 'pwnable.kr', 2222, 'guest')
shell = server.shell()
shell.recvuntil('$')
shell.sendline('echo ' + str(key) + ' | ./leg')
result = shell.recvuntil('$')

print(result)

server.close()

